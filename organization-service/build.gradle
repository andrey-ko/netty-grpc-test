gradle.startParameter.showStacktrace = ShowStacktrace.ALWAYS
apply plugin: 'application'

mainClassName = "${pckg}.App"
applicationName = archivesBaseName

startScripts {
  defaultJvmOpts = ["-server", "-d64", "-Xmx2g"]
  optsEnvironmentVar = "APP_OPTS"
}

apply from: rootProject.file("metainfo.gradle")
apply from: rootProject.file("docker.gradle")


task buildDockerImage(type: DockerBuildImageTask) {
  group 'docker'
  dependsOn installDist
  dependsOn dockerPrepare

  contextDir = installDist.destinationDir
  imageName = project.name
}

task runDockerContainer(type: DockerRunContainerTask) {
  group 'docker'
  dependsOn buildDockerImage
  imageName = project.name
  runArgs = ["-p8080:8080"]
  //cmdArgs = ["--port", "8888"]
  containerName = project.name
}

task stopDockerContainer(type: DockerStopContainerTask) {
  containerName = project.name
}

task generateKubeConfig(type: TransformTask) {
  group 'codegen'

  description "generate kubernetes configuration"
  generateCode.dependsOn(it)

  template = file("${archivesBaseName}.template.yaml")
  output = file("${archivesBaseName}.yaml")

  inputs.property("version", version)

  clean.doFirst {
    delete output
  }
}

// main dependencies
dependencies {
  compile project(":utils")
}

// test dependencies
dependencies {
}
